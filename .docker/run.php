#!/bin/env php
<?php

// Check install is valid and dirs exist
if (!is_dir("/app/data")) {
    mkdir("/app/data", 0755);
}
chown("/app/data", 'shimmie');
chgrp("/app/data", 'shimmie');

// Get php.ini settings from PHP_INI_XXX environment variables
$php_ini = [
    'max_file_uploads' => '100',
    'upload_max_filesize' => '100M',
];
foreach (getenv() as $key => $value) {
    if (str_starts_with($key, 'PHP_INI_')) {
        $php_ini_key = str_replace("_dot_", ".", strtolower(substr($key, 8)));
        $php_ini[$php_ini_key] = $value;
    }
}
// this one needs to be calculated for the web server itself
$php_ini['post_max_size'] ??= (string)(
    ini_parse_quantity($php_ini['upload_max_filesize']) *
    intval($php_ini['max_file_uploads'])
);

@include_once "data/config/shimmie.conf.php";
$php_version = preg_replace('/^(\d+\.\d+).*$/', '$1', phpversion());
$date = date("c");

file_put_contents(
    '/etc/supervisor/supervisord.conf',
    <<<EOD
; Generated by /app/.docker/run.php on $date

[supervisord]
nodaemon=true
; nodaemon automatically sends logs to stdout and
; logfile=/dev/stdout would duplicate them
logfile=/dev/null
logfile_maxbytes=0
pidfile=/var/run/supervisord.pid
user=root
group=root

[program:nginx]
command=nginx -c /etc/nginx/nginx.conf -g 'daemon off;'
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:php-fpm]
command=php-fpm$php_version -R -F -y /etc/php/php-fpm.conf
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[eventlistener:exit_on_fatal]
command=php /app/.docker/exit-on-fatal.php
events=PROCESS_STATE_EXITED,PROCESS_STATE_STOPPED,PROCESS_STATE_FATAL
EOD
);

$client_max_body_size = ini_parse_quantity($php_ini['post_max_size']) * 1.1;
$wh_splits = defined("WH_SPLITS") ? constant("WH_SPLITS") : 1;
$wh_split_path = match ($wh_splits) {
    1 => '$1/$1$2$3',
    2 => '$1/$2/$1$2$3',
    default => throw new \Exception("Invalid WH_SPLITS value"),
};

file_put_contents(
    '/etc/nginx/nginx.conf',
    <<<EOD
# Generated by /app/.docker/run.php on $date

worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;

    server {
        listen 8000;
        root /app;
        server_name  _;
        access_log off;
        error_log /dev/stderr;
        log_not_found off;
        client_max_body_size $client_max_body_size;

        # Serve images and thumbs from the warehouse
        # use alias instead of rewrite so nginx can determine the content-type
        location ~ "^/_images/([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{28}).*$" {
            alias /app/data/images/$wh_split_path;
            expires 30d;
        }

        location ~ "^/_thumbs/([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{28}).*$" {
            alias /app/data/thumbs/$wh_split_path;
            expires 30d;
        }

        # Serve static files straight from disk, if they exist
        location ~ "^.*\.(css|js|map|gif|png|jpg|jpeg|ico)$" {
            try_files \$uri /;
            expires 1d;
        }

        # Have Shimmie handle everything else
        location / {
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME \$document_root/index.php;
            fastcgi_pass unix:/var/run/php-fpm.sock;
        }
    }
}
EOD
);

file_put_contents(
    '/etc/php/php-fpm.conf',
    <<<EOD
; Generated by /app/.docker/run.php on $date

[www]
catch_workers_output = yes
decorate_workers_output = no

pm = dynamic
pm.max_children = 32
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3
clear_env = no

user = shimmie
group = shimmie
listen = /var/run/php-fpm.sock
listen.owner = www-data
listen.group = www-data
listen.mode = 0777
EOD
);

file_put_contents(
    "/etc/php/$php_version/fpm/conf.d/99-shimmie2.ini",
    "; Generated by /app/.docker/run.php on $date\n" .
    implode("\n", array_map(
        fn ($k, $v) => "$k = $v",
        array_keys($php_ini),
        $php_ini
    )) . "\n"
);

chdir("/");
pcntl_exec('/usr/bin/supervisord', [
    '-c', '/etc/supervisor/supervisord.conf'
]);
