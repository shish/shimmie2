<?php

declare(strict_types=1);

namespace Shimmie2;

final class ImageBanTest extends ShimmiePHPUnitTestCase
{
    private string $hash = "feb01bab5698a11dd87416724c7a89e3";

    public function testPages(): void
    {
        self::log_in_as_admin();
        $page = self::get_page("image_hash_ban/list");
        self::assertEquals(200, $page->code);
    }

    public function testBan(): void
    {
        self::log_in_as_admin();

        // Post image
        $image_id = $this->post_image("tests/pbx_screenshot.jpg", "pbx");
        $page = self::get_page("post/view/$image_id");
        self::assertEquals(200, $page->code);

        // Ban & delete
        send_event(new AddImageHashBanEvent($this->hash, "test hash ban"));
        send_event(new ImageDeletionEvent(Image::by_id_ex($image_id), true));

        // Check deleted
        self::assertException(PostNotFound::class, function () use ($image_id) {
            self::get_page("post/view/$image_id");
        });

        // Can't repost
        self::assertException(UploadException::class, function () {
            $this->post_image("tests/pbx_screenshot.jpg", "pbx");
        });

        // Remove ban
        send_event(new RemoveImageHashBanEvent($this->hash));

        // Can repost
        $image_id = $this->post_image("tests/pbx_screenshot.jpg", "pbx");
        $page = self::get_page("post/view/$image_id");
        self::assertEquals(200, $page->code);
    }

    public function onNotSuccessfulTest(\Throwable $t): never
    {
        send_event(new RemoveImageHashBanEvent($this->hash));
        parent::onNotSuccessfulTest($t); // TODO: Change the autogenerated stub
    }
}
